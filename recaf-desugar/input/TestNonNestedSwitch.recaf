package generated;
import recaf.dummy.*;
import recaf.core.Ref;

public class TestNonNestedSwitch {
 
 	public static Void print(String msg) {
		System.out.println(msg);
		return null;
	}  
	
  	[DummyExtension<String>]
	String testSwitch_nobreak() { 
     	int number = 1;
     	 
     	String selection = "none";	
		 
		switch (number) {
			case 1: 
				print("one");	
			case 2: 
				print("two");
			default: 
				print("default");
		}
		 
		return selection;
	} 
	
	[DummyExtension<String>]
	String testSwitch_break_first() { 
     	int number = 1;
     	 
     	String selection = "none";	
		 
		switch (number) {
			case 1: 
				print("one");
				break;	
			case 2: 
				print("two");
			default: 
				print("default");
		} 
		return selection;
	} 
	
	[DummyExtension<String>]
	String testSwitch_break_second() { 
     	int number = 1;
     	 
     	String selection = "none";	
		 
		switch (number) {
			case 1: 	
				;
			case 2: 
				print("one and two");
				break;
			default: 
				print("default");
		} 
		return selection;
	}  
	
	[DummyExtension<String>]
	String testSwitch_break_second_withdefault() { 
     	int number = 2;
     	 
     	String selection = "none";	
		 
		switch (number) {
			case 1: 	
				print("one");
			case 2: 
				print("two");
			default: 
				print("with default");
		} 
		return selection;
	}
	
	[DummyExtension<String>]
	String testSwitch_break_default_beginning() { 
     	int number = 2;
     	 
     	String selection = "none";	
		 
		switch (number) {
			default: 
				print("with default");
			case 1: 	
				print("one");
				break;
			case 2: 
				print("two");
		} 
		return selection;
	}
	
	public static void main(String args[]) {
		new TestNonNestedSwitch().testSwitch_nobreak();
		System.out.println();
		new TestNonNestedSwitch().testSwitch_break_first();
		System.out.println();
		new TestNonNestedSwitch().testSwitch_break_second();
		System.out.println();
		new TestNonNestedSwitch().testSwitch_break_second_withdefault();
		
		//new TestNonNestedSwitch().testSwitch_break_default_beginning();
  	}
}