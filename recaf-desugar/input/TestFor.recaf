package generated;
import java.util.*;
import recaf.dummy.DummyExtension;

public class TestFor {

	[DummyExtension<Integer>]
	Integer testFor_noBreak() { 		 	 
	 	Integer sum = 0;
	 	 
	 	// TODO: Instead I should be able to write
 		// List <Integer> ...
		List list = Arrays.asList(1,2,3,4,5);
	 	
	 	// TODO: For translates without the universal type of the generic method
	 	// <Integer>For(... in this case 
		for(Integer i : list) {
		    sum += (Integer)i;
		}
		
		return sum;	
	}  
	
	
	[DummyExtension<Integer>]
    Integer testFor_ordinary() {              
        int sum = 0;
        for(int i = 0; i < 10; i++) {
            System.out.println("i = " + i);
            System.out.println("sum = " + sum);
            sum += i;
        }
        return sum; 
    }  
	
	[DummyExtension<Integer>]
    Integer testFor_withBreak() {              
        Integer sum = 0;
         
        // TODO: Instead I should be able to write
        // List <Integer> ...
        List list = Arrays.asList(1,2,3,4,5);
        
        // TODO: For translates without the universal type of the generic method
        // <Integer>For(... in this case
        bla: while(true) { 
            System.out.println("continue");
	        for(Integer i : list) {
	            System.out.println("forloop");
	            sum += (Integer)i;
	            if (i > 3) {
	              break bla;
	            }
	        }
	    }
        
        return sum; 
    }  
	
	public static void main(String args[]) {
        System.out.println(new TestFor().testFor_noBreak()); //15   
        System.out.println(new TestFor().testFor_withBreak()); //10   
        System.out.println(new TestFor().testFor_ordinary()); //10   
	}
}
