
package generated;

import recaf.demo.cps.Coroutine;
import java.util.Random;


public class TestCoroutine {

  static void producer(Coroutine.Co<Integer, Integer> other) throws InterruptedException {
    while (true) {
      Thread.sleep(1000);
      int data = (new Random()).nextInt();
      System.out.println("Sending " + data);
      System.out.println("Producer received: " + other.resume(data));
    }
  }
  
  static Coroutine.Co<Integer, Integer> consumer(recaf Coroutine<Integer,Integer> alg) {
    int i = 0;
    while (true) {
      Integer x = yield! i++;
      System.out.println("consumer received: " + x); 
      yield! 2 * i++;
    }
  }
  
  public static void main(String args[]) throws InterruptedException {
     Coroutine.Co<Integer,Integer> coro = consumer(new Coroutine<Integer,Integer>());
     coro.run();
     producer(coro);
  }

}