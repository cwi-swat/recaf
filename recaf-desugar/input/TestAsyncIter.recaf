import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;

import recaf.asynciter.AsyncIterExtension;
import recaf.asynciter.AsyncIterExtension.AsyncEnumerable;

public class TestAsyncIter {

  static Void println(Object o) {
    System.out.println(o);
    return null;
  }
  
  [AsyncIterExtension<Integer>] 
  AsyncEnumerable<Integer> asyncRange() {
    yield! 1;
    yield! 2;
    yield! 3;
    yield! 4;
    yield! 5;
  }
  
  public static void main(String args[]) throws InterruptedException, ExecutionException {
    for (CompletableFuture<Integer> i: new TestAsyncIter().asyncRange()) {
      System.out.println("i = " + i.get());
    }
  }

}
