package generated; 
import recaf.core.Ref;
import recaf.core.full.FullJavaDirect;
import java.util.stream.IntStream;
import java.util.Iterator;
import java.util.function.Predicate;
import java.util.function.*;  

class A{
	int i = 1;
	
	int a(int x, int y){
		return ++i;
	}
	
	public A(){
	
	}
}

public class TestSimple    {
  private static recaf FullJavaDirect<Object> alg = new FullJavaDirect<Object>() {};
  
  private recaff static Integer simple(){           
  	int a = 4; 
   	int b = a++;     
   	int d = 0; 
   	while (d < 5     ){      
      		++d;
	}
	return d;
  } 
  
  private recaff static Integer access(){           
  	int a = 4; 
    return a;
  } 
  
  private recaff static Integer methodCall(){           
  	return  new A().a(1,2);
  }  
  
  private recaff static Integer fieldAccess(){           
  	return  new A().i;
  }  
  
  private recaff static Integer many(){
  	A a = new A();
  	a.i = 3;
  	return a.i; 
  
  }
  
  
  public static void main(String args[]) {
    int n = many();
    System.out.println(n);
    
  }
}